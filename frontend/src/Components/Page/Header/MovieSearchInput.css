.wrapper {
  display: flex;
  align-items: center;
  flex: auto;
  max-width: 100%;
}

.loading {
  position: absolute;
  display: inline-block;
  margin-left: 5px;
}

.ripple {
  composes: ripple from '~Components/Loading/LoadingIndicator.css';

  border: 1px solid var(--toolbarColor);
}

.input {
  margin-left: 8px;
  width: 200px;
  border: none;
  border-bottom: solid 1px var(--white);
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;
  color: var(--white);
  transition: border 0.3s ease-out;

  &::placeholder {
    color: var(--white);
    transition: color 0.3s ease-out;
  }

  &:focus {
    outline: 0;
    border-bottom-color: transparent;

    &::placeholder {
      color: transparent;
    }
  }
}

.container {
  position: relative;
  flex-grow: 1;
}

.movieContainer {
  @add-mixin scrollbar;
  @add-mixin scrollbarTrack;
  @add-mixin scrollbarThumb;
  display: flex;
  flex-grow: 1;
}

.containerOpen {
  .movieContainer {
    position: absolute;
    top: 42px;
    z-index: 1;
    display: flex;
    flex: auto;
    flex-grow: 1;
    flex-wrap: wrap;
    overflow-x: hidden;
    overflow-y: auto;
    max-height: 500px;
    border: 1px solid var(--themeDarkColor);
    border-radius: 4px;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    background-color: var(--themeDarkColor);
    box-shadow: inset 0 1px 1px var(--inputBoxShadowColor);
    color: var(--menuItemColor);
  }

  .movieContainer>div {
    display: flex;
    flex-direction: column;
    min-width: 100%;
  }
}

.list {
  margin: 5px 0;
  padding-left: 0;
  max-width: 100%;
  list-style-type: none;
}

.listItem {
  white-space: nowrap;
}

.highlighted {
  background-color: var(--themeLightColor);
}

.sectionContainer {
  display: flex;
  flex-flow: row wrap;
  min-width: 100px;
  border-top: 1px solid var(--borderColor);
}

.sectionTitle {
  margin-right: 10px;
  padding: 5px 8px;
  color: var(--disabledColor);
}

.addNewMovieSuggestion {
  padding-left: 20px;
  cursor: pointer;
}

@media only screen and (max-width: $breakpointSmall) {
  .input {
    min-width: 150px;
    max-width: 200px;
  }

  .container {
    min-width: 0;
    max-width: 300px;
  }
}